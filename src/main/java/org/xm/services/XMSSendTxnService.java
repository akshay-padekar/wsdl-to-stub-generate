package org.xm.services;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.4
 * 2018-07-19T19:26:59.548+05:30
 * Generated source version: 3.1.4
 * 
 */
@WebServiceClient(name = "XMSSendTxnService", 
                  wsdlLocation = "classpath:wsdl/XM_V5.wsdl",
                  targetNamespace = "http://services.xm.org") 
public class XMSSendTxnService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://services.xm.org", "XMSSendTxnService");
    public final static QName XMSSendTxnServiceSOAP12Port = new QName("http://services.xm.org", "XMSSendTxnServiceSOAP12port");
    public final static QName XMSSendTxnServiceSOAP11Port = new QName("http://services.xm.org", "XMSSendTxnServiceSOAP11port");
    static {
        URL url = XMSSendTxnService.class.getClassLoader().getResource("wsdl/XM_V5.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(XMSSendTxnService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "classpath:wsdl/XM_V5.wsdl");
        }       
        WSDL_LOCATION = url;   
    }

    public XMSSendTxnService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public XMSSendTxnService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public XMSSendTxnService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public XMSSendTxnService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public XMSSendTxnService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public XMSSendTxnService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns XMSSendTxnServicePortType
     */
    @WebEndpoint(name = "XMSSendTxnServiceSOAP12port")
    public XMSSendTxnServicePortType getXMSSendTxnServiceSOAP12Port() {
        return super.getPort(XMSSendTxnServiceSOAP12Port, XMSSendTxnServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns XMSSendTxnServicePortType
     */
    @WebEndpoint(name = "XMSSendTxnServiceSOAP12port")
    public XMSSendTxnServicePortType getXMSSendTxnServiceSOAP12Port(WebServiceFeature... features) {
        return super.getPort(XMSSendTxnServiceSOAP12Port, XMSSendTxnServicePortType.class, features);
    }


    /**
     *
     * @return
     *     returns XMSSendTxnServicePortType
     */
    @WebEndpoint(name = "XMSSendTxnServiceSOAP11port")
    public XMSSendTxnServicePortType getXMSSendTxnServiceSOAP11Port() {
        return super.getPort(XMSSendTxnServiceSOAP11Port, XMSSendTxnServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns XMSSendTxnServicePortType
     */
    @WebEndpoint(name = "XMSSendTxnServiceSOAP11port")
    public XMSSendTxnServicePortType getXMSSendTxnServiceSOAP11Port(WebServiceFeature... features) {
        return super.getPort(XMSSendTxnServiceSOAP11Port, XMSSendTxnServicePortType.class, features);
    }

}
